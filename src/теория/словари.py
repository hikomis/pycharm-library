# #Словари(Dictionaries)
dict = {"Помидор" :1, "Огурец": 2, "Персик": 12, "Слива": 102}

dict.get("Помидор") #возвращает значение по ключу
dict.items() #возвращает все ключи и значения
dict.pop("Слива") #удаляет ключ и возвращает его значение
dict.popitem() #удаляет значение и ключ и возвращает его значение
dict.values()#возвращает значения в словаре
dict.copy()# возвращает копию словаря
dict.clear()# очищает словарь
keys = ["Машины", "Лодки", "Самолеты"]
values = 1
values1 = 2
dict2 = dict.fromkeys(keys) #создает словарь с ключами из keys и значением value

dict2["Машины"] = 2

key = "Дерево"
dict2.update({"Лодки": values1}) #обновляет словарь, добавляя пары (ключ, значение). Существующие ключи перезаписываются. Возвращает None (не новый словарь!).
print(dict2)
#Кортежи(Tuples)
a = [1, 2, 3, 4, 5, 6, 7]
a = tuple(a)


# """
# Кортеж тип данных, который полностью защищен от изменений
# 1)Все методы списка, которые никак его не меняют...(например: count, index)
# 2)Также можно менять местами элементы списка, так как сама структура кортежа от этого не меняется.
# 3)Кортеж работате ~ в 10 раз быстрее списка, что помогает оптимизировать работу кода
# """
#
# #Множества(Sets) и Замороженные множества(frosenset)
# b = [1, 2, 3, 512]
# set1 = set(b)
# c = [1, 2, 3, 4, 5,"Ffdg","gsadg"]
# set2 = set(c)


#Действия с множествами(set, frozenset)
# set1.isdisjoint(set2) #проверка множеств на общие элементы возвращает False или True
# set1 == set2# все элементы множества 1 принадлежат множеству два и наоборот
# set1 >= set2# все элементы set2 принадлежат set1 (также есть команда issubset) set1.issubset(set2)
# set1 <= set2# аналогично предыдущему(также есть команда issuperset)
# set1.union(set2)# объединение множеств
# set1 & set2# пересечение множеств(также есть команда intersection)
# set1 - set2# множество из элеменов set1, не принадлежащие ни одному из set2(также есть команда difference)
# set1 ^ set2# множество из элементов встречающихся в set1 и set2, но не встречающихся в обоих(также есть команда symmetric_difference)
# set1.copy()# копия множества
#
# #Изменения множеств(set)
# set1.update(set2)# объединения множеств (set1 |= set2 |....)
# set1.intersection_update(set2)# пересечение множеств(set1 &= set2 &....)
# set1.difference_update(set2)# вычитание(set1 -= set2 |....)
# set1.symmetric_difference_update(set2)# множество из элементов, встречающихся в одном, но не встречающихся в обоих(set1^=set2)
# set1.add(10)# добавление
# set2.remove("Бразилия")# удаление,если такого элемента нет, то ошибка
# set1.discard("БразилиАаАа")# удаление если присутствует такой элемент
# set1.pop()# удаляет первый элемент из множества
# set1.clear()#очистка множества